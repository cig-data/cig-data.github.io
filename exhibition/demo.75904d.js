(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1263:function(n,s,a){n.exports={snow:a(1272)}},1272:function(n,s,a){n.exports={content:{"zh-CN":[["p","支付宝客户端里的小钱袋产品的金钱发生变化时的金币掉落效果，重看点刷新按钮。"],["p",["a",{title:null,href:"https://github.com/ant-design/ant-motion/tree/master/exhibition/js/money.less"},"money.less 请查看这里"],";"]],"en-US":[["p","Gold coin drop effect, replay click refresh button."],["p",["a",{title:null,href:"https://github.com/ant-design/ant-motion/tree/master/exhibition/js/money.less"},"money.less"],";"]]},meta:{order:6,title:{"zh-CN":"掉落效果","en-US":"Snow"},content:{"zh-CN":"元素从上往下掉落的一个效果。","en-US":"An effect of falling elements from top to bottom."},image:"https://gw.alipayobjects.com/zos/rmsportal/CdkOMmURLntHGuuqFXnj.jpg",filename:"exhibition/demo/snow.md",id:"exhibition-demo-snow"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> TweenOne <span class="token keyword">from</span> <span class="token string">\'rc-tween-one\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> BezierPlugin <span class="token keyword">from</span> <span class="token string">\'rc-tween-one/lib/plugin/BezierPlugin\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">\'prop-types\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">\'../js/money.less\'</span><span class="token punctuation">;</span>\n\nTweenOne<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>BezierPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Snow</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n    children<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">,</span>\n    className<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    prefixCls<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    amount<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    repeat<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    ease<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    startArea<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>\n    endArea<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>\n    startDelayRandom<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    basicToDuration<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    randomToDuration<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    rotateRandom<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    bezierSegmentation<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    onEnd<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    prefixCls<span class="token punctuation">:</span> <span class="token string">\'snow\'</span><span class="token punctuation">,</span>\n    amount<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    repeat<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    ease<span class="token punctuation">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n    startArea<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    endArea<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      x<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token string">\'120%\'</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    basicToDuration<span class="token punctuation">:</span> <span class="token number">1200</span><span class="token punctuation">,</span>\n    randomToDuration<span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span>\n    startDelayRandom<span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span>\n    rotateRandom<span class="token punctuation">:</span> <span class="token number">180</span><span class="token punctuation">,</span>\n    bezierSegmentation<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    onEnd<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      children<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChilrenToState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  onAnimEnd <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>animEnd <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>animEnd <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>animEnd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>onEnd<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">onEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setChilrenToState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChildrenToRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      children<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  getChildrenToRender <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      bezierSegmentation<span class="token punctuation">,</span> basicToDuration<span class="token punctuation">,</span> randomToDuration<span class="token punctuation">,</span>\n      amount<span class="token punctuation">,</span> ease<span class="token punctuation">,</span> startDelayRandom<span class="token punctuation">,</span> repeat<span class="token punctuation">,</span> rotateRandom<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> children <span class="token operator">=</span> React<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>wrapperDom<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> startArea <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dataToNumber</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>startArea<span class="token punctuation">,</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> endArea <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dataToNumber</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>endArea<span class="token punctuation">,</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> item <span class="token operator">=</span> children<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> children<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> vars <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>bezierSegmentation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> j<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> hegiht <span class="token operator">=</span> endArea<span class="token punctuation">.</span>y <span class="token operator">-</span> startArea<span class="token punctuation">.</span>y <span class="token operator">-</span> startArea<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>hegiht <span class="token operator">/</span> bezierSegmentation<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>width<span class="token punctuation">,</span> endArea<span class="token punctuation">.</span>width<span class="token punctuation">)</span>\n          <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>x<span class="token punctuation">,</span> endArea<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment" spellcheck="true">// console.log(hegiht, startArea, endArea, y);</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          y<span class="token punctuation">,</span>\n          x<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> startDelayRandom<span class="token punctuation">;</span>\n      <span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token punctuation">{</span>\n        bezier<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          type<span class="token punctuation">:</span> <span class="token string">\'soft\'</span><span class="token punctuation">,</span>\n          autRotate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          vars<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        ease<span class="token punctuation">,</span>\n        repeat<span class="token punctuation">,</span>\n        repeatDelay<span class="token punctuation">:</span> delay<span class="token punctuation">,</span>\n        delay<span class="token punctuation">,</span>\n        duration<span class="token punctuation">:</span> basicToDuration <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> randomToDuration<span class="token punctuation">,</span>\n        onComplete<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAnimEnd<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>\n        transform<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">+</span> startArea<span class="token punctuation">.</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>\n          Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">+</span> startArea<span class="token punctuation">.</span>y\n        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)`</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> child <span class="token operator">=</span> rotateRandom <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TweenOne</span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snowRotate<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> transform<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`rotate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> rotateRandom<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">deg)`</span></span> <span class="token punctuation">}</span></span><span class="token attr-name">}</span>\n          <span class="token attr-name">animation</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            rotate<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            duration<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>duration <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">,</span>\n            delay<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>delay<span class="token punctuation">,</span>\n            repeat<span class="token punctuation">:</span> animation<span class="token punctuation">.</span>repeat<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>item<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TweenOne</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span> <span class="token punctuation">:</span> item<span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TweenOne</span>\n          <span class="token attr-name">animation</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>animation<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n          <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snowChild<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>child<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TweenOne</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  dataToNumber <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span> rect<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> toNumber <span class="token operator">=</span> <span class="token punctuation">(</span>v<span class="token punctuation">,</span> full<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> v <span class="token operator">===</span> <span class="token string">\'number\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> v<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">const</span> unit <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/[0-9|.]/g</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">switch</span> <span class="token punctuation">(</span>unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">case</span> <span class="token string">\'%\'</span><span class="token punctuation">:</span>\n          <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">*</span> full <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>\n        <span class="token keyword">case</span> <span class="token string">\'em\'</span><span class="token punctuation">:</span>\n          <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">;</span>\n        <span class="token keyword">default</span><span class="token punctuation">:</span>\n          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      x<span class="token punctuation">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      y<span class="token punctuation">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>y<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      width<span class="token punctuation">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      height<span class="token punctuation">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>height<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  animEnd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> prefixCls<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'amount\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'repeat\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'ease\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'startArea\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'endArea\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'basicToDuration\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'randomToDuration\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'startDelayRandom\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'bezierSegmentation\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'rotateRandom\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'onEnd\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>k <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">delete</span> props<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> className <span class="token operator">=</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prefixCls<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">${props.className ? `</span></span> $<span class="token punctuation">{</span>props<span class="token punctuation">.</span>className<span class="token punctuation">}</span><span class="token template-string"><span class="token string">` : \'\'}`</span></span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token operator">&lt;</span>div\n        <span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span>\n        ref<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>wrapperDom <span class="token operator">=</span> c<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span>\n        className<span class="token operator">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span>\n      <span class="token operator">></span>\n        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SnowDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  onEnd <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      show<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addMoneyAnim<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> animationDelay<span class="token punctuation">:</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.6</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s`</span></span> <span class="token punctuation">}</span></span><span class="token attr-name">}</span> <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snow-demo-wrapper<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snow-demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>show <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Snow</span> <span class="token attr-name">onEnd</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEnd<span class="token punctuation">}</span></span> <span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Snow</span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SnowDemo</span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> TweenOne <span class="token keyword">from</span> <span class="token string">\'rc-tween-one\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> BezierPlugin <span class="token keyword">from</span> <span class="token string">\'rc-tween-one/lib/plugin/BezierPlugin\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">\'prop-types\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">\'../js/money.less\'</span><span class="token punctuation">;</span>\n\nTweenOne<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>BezierPlugin<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Snow</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>\n    children<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">,</span>\n    className<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    prefixCls<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    amount<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    repeat<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    ease<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>\n    startArea<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>\n    endArea<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>\n    startDelayRandom<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    basicToDuration<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    randomToDuration<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    rotateRandom<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    bezierSegmentation<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>\n    onEnd<span class="token operator">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span>\n    prefixCls<span class="token operator">:</span> <span class="token string">\'snow\'</span><span class="token punctuation">,</span>\n    amount<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n    repeat<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    ease<span class="token operator">:</span> <span class="token string">\'linear\'</span><span class="token punctuation">,</span>\n    startArea<span class="token operator">:</span> <span class="token punctuation">{</span>\n      x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    endArea<span class="token operator">:</span> <span class="token punctuation">{</span>\n      x<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token string">\'120%\'</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    basicToDuration<span class="token operator">:</span> <span class="token number">1200</span><span class="token punctuation">,</span>\n    randomToDuration<span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>\n    startDelayRandom<span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>\n    rotateRandom<span class="token operator">:</span> <span class="token number">180</span><span class="token punctuation">,</span>\n    bezierSegmentation<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">onEnd</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      children<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setChilrenToState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">onAnimEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>animEnd <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>animEnd <span class="token operator">>=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>animEnd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>onEnd<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">onEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">setChilrenToState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getChildrenToRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      children<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function-variable function">getChildrenToRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      bezierSegmentation<span class="token punctuation">,</span> basicToDuration<span class="token punctuation">,</span> randomToDuration<span class="token punctuation">,</span>\n      amount<span class="token punctuation">,</span> ease<span class="token punctuation">,</span> startDelayRandom<span class="token punctuation">,</span> repeat<span class="token punctuation">,</span> rotateRandom<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> children <span class="token operator">=</span> React<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> rect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>wrapperDom<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> startArea <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dataToNumber</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>startArea<span class="token punctuation">,</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> endArea <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dataToNumber</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>endArea<span class="token punctuation">,</span> rect<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token function">Array</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">k<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> item <span class="token operator">=</span> children<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> children<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> vars <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>bezierSegmentation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span> j</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> hegiht <span class="token operator">=</span> endArea<span class="token punctuation">.</span>y <span class="token operator">-</span> startArea<span class="token punctuation">.</span>y <span class="token operator">-</span> startArea<span class="token punctuation">.</span>height<span class="token punctuation">;</span>\n        <span class="token keyword">const</span> y <span class="token operator">=</span> <span class="token punctuation">(</span>hegiht <span class="token operator">/</span> bezierSegmentation<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>width<span class="token punctuation">,</span> endArea<span class="token punctuation">.</span>width<span class="token punctuation">)</span>\n          <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>x<span class="token punctuation">,</span> endArea<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// console.log(hegiht, startArea, endArea, y);</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n          y<span class="token punctuation">,</span>\n          x<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> startDelayRandom<span class="token punctuation">;</span>\n      <span class="token keyword">const</span> animation <span class="token operator">=</span> <span class="token punctuation">{</span>\n        bezier<span class="token operator">:</span> <span class="token punctuation">{</span>\n          type<span class="token operator">:</span> <span class="token string">\'soft\'</span><span class="token punctuation">,</span>\n          autRotate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          vars<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        ease<span class="token punctuation">,</span>\n        repeat<span class="token punctuation">,</span>\n        repeatDelay<span class="token operator">:</span> delay<span class="token punctuation">,</span>\n        delay<span class="token punctuation">,</span>\n        duration<span class="token operator">:</span> basicToDuration <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> randomToDuration<span class="token punctuation">,</span>\n        onComplete<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onAnimEnd<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>\n        transform<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">translate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">+</span> startArea<span class="token punctuation">.</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>\n          Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>startArea<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">+</span> startArea<span class="token punctuation">.</span>y\n        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> child <span class="token operator">=</span> rotateRandom <span class="token operator">?</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TweenOne</span></span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snowRotate<span class="token punctuation">"</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> transform<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rotate(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> rotateRandom<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">deg)</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">animation</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n            rotate<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n            duration<span class="token operator">:</span> animation<span class="token punctuation">.</span>duration <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">,</span>\n            delay<span class="token operator">:</span> animation<span class="token punctuation">.</span>delay<span class="token punctuation">,</span>\n            repeat<span class="token operator">:</span> animation<span class="token punctuation">.</span>repeat<span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>item<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">TweenOne</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span> <span class="token operator">:</span> item<span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">TweenOne</span></span>\n          <span class="token attr-name">animation</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>animation<span class="token punctuation">}</span></span>\n          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>\n          <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snowChild<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span>child<span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">TweenOne</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">dataToNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> rect</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">toNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> full</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> v <span class="token operator">===</span> <span class="token string">\'number\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> v<span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">const</span> unit <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/[0-9|.]/g</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">switch</span> <span class="token punctuation">(</span>unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">case</span> <span class="token string">\'%\'</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">*</span> full <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>\n        <span class="token keyword">case</span> <span class="token string">\'em\'</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">;</span>\n        <span class="token keyword">default</span><span class="token operator">:</span>\n          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      x<span class="token operator">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>x<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      y<span class="token operator">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>y<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      width<span class="token operator">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      height<span class="token operator">:</span> <span class="token function">toNumber</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>height<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  animEnd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> prefixCls<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> children <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'amount\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'repeat\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'ease\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'startArea\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'endArea\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'basicToDuration\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'randomToDuration\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'startDelayRandom\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'bezierSegmentation\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'rotateRandom\'</span><span class="token punctuation">,</span>\n      <span class="token string">\'onEnd\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">k</span> <span class="token operator">=></span> <span class="token keyword">delete</span> props<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> className <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>prefixCls<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>className <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props<span class="token punctuation">.</span>className<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">\'\'</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token spread"><span class="token punctuation">{</span><span class="token punctuation">...</span><span class="token attr-value">props</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">this</span><span class="token punctuation">.</span>wrapperDom <span class="token operator">=</span> c<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>className<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">SnowDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n  state <span class="token operator">=</span> <span class="token punctuation">{</span>\n    show<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">onEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      show<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">c<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>addMoneyAnim<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> animationDelay<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.6</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">s</span><span class="token template-punctuation string">`</span></span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snow-demo-wrapper<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snow-demo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>show <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Snow</span></span> <span class="token attr-name">onEnd</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>onEnd<span class="token punctuation">}</span></span> <span class="token punctuation">></span></span>\n              <span class="token punctuation">{</span>children<span class="token punctuation">}</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Snow</span></span><span class="token punctuation">></span></span>\n          <span class="token punctuation">)</span><span class="token punctuation">}</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SnowDemo</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=a(0),s=(a(4),o(a(18))),t=o(a(1273)),p=o(a(1));function o(n){return n&&n.__esModule?n:{default:n}}function e(n){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function c(){return(c=Object.assign||function(n){for(var s=1;s<arguments.length;s++){var a=arguments[s];for(var t in a)Object.prototype.hasOwnProperty.call(a,t)&&(n[t]=a[t])}return n}).apply(this,arguments)}function u(n,s){if(null==n)return{};var a,t,p=function(n,s){if(null==n)return{};var a,t,p={},o=Object.keys(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||(p[a]=n[a]);return p}(n,s);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(t=0;t<o.length;t++)a=o[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(n,a)&&(p[a]=n[a])}return p}function l(n,s){if(!(n instanceof s))throw new TypeError("Cannot call a class as a function")}function i(n,s){for(var a=0;a<s.length;a++){var t=s[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function k(n,s,a){return s&&i(n.prototype,s),a&&i(n,a),n}function r(n,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&d(n,s)}function d(n,s){return(d=Object.setPrototypeOf||function(n,s){return n.__proto__=s,n})(n,s)}function m(n){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,t=y(n);if(s){var p=y(this).constructor;a=Reflect.construct(t,arguments,p)}else a=t.apply(this,arguments);return h(this,a)}}function h(n,s){return!s||"object"!==e(s)&&"function"!=typeof s?g(n):s}function g(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function y(n){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function f(n,s,a){return s in n?Object.defineProperty(n,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[s]=a,n}a(1274),s.default.plugins.push(t.default);var w=function(a){r(p,a);var t=m(p);function p(a){var o;return l(this,p),f(g(o=t.call(this,a)),"onAnimEnd",(function(){o.animEnd+=1,o.animEnd>=o.props.amount&&(o.animEnd=0,o.props.onEnd&&o.props.onEnd())})),f(g(o),"getChildrenToRender",(function(){var a=o.props,t=a.bezierSegmentation,p=a.basicToDuration,e=a.randomToDuration,c=a.amount,u=a.ease,l=a.startDelayRandom,i=a.repeat,k=a.rotateRandom,r=n.Children.toArray(o.props.children),d=o.wrapperDom.getBoundingClientRect(),m=o.dataToNumber(o.props.startArea,d),h=o.dataToNumber(o.props.endArea,d);return Array(c).fill(1).map((function(a,c){var d=r[Math.floor(Math.random()*r.length)],g=Array(t).fill(1).map((function(n,s){return{y:(h.y-m.y-m.height)/t*(s+1),x:Math.random()*(Math.max(m.width,h.width)+Math.min(m.x,h.x))}})),y=Math.random()*l,f={bezier:{type:"soft",autRotate:!0,vars:g},ease:u,repeat:i,repeatDelay:y,delay:y,duration:p+Math.random()*e,onComplete:o.onAnimEnd},w={transform:"translate(".concat(Math.random()*m.width+m.x,"px, ").concat(Math.random()*m.height+m.y,"px)")},b=k?n.createElement(s.default,{className:"snowRotate",style:{transform:"rotate(".concat(Math.random()*k,"deg)")},animation:{rotate:0,duration:4*f.duration/5,delay:f.delay,repeat:f.repeat}},d):d;return n.createElement(s.default,{animation:f,style:w,key:"".concat(d,"-").concat(c.toString()),className:"snowChild"},b)}))})),f(g(o),"dataToNumber",(function(n,s){var a=function(n,s){if("number"==typeof n)return n;switch(n.replace(/[0-9|.]/g,"")){case"%":return parseFloat(n)*s/100;case"em":return 16*parseFloat(n);default:return null}};return{x:a(n.x,s.width),y:a(n.y,s.height),width:a(n.width,s.width),height:a(n.height,s.height)}})),f(g(o),"animEnd",0),o.state={children:null},o}return k(p,[{key:"componentDidMount",value:function(){this.setChilrenToState()}},{key:"setChilrenToState",value:function(){var n=this.getChildrenToRender();this.setState({children:n})}},{key:"render",value:function(){var s=this,a=this.props,t=a.prefixCls,p=u(a,["prefixCls"]),o=this.state.children;["amount","repeat","ease","startArea","endArea","basicToDuration","randomToDuration","startDelayRandom","bezierSegmentation","rotateRandom","onEnd"].forEach((function(n){return delete p[n]}));var e="".concat(t).concat(p.className?" ".concat(p.className):"");return n.createElement("div",c({},p,{ref:function(n){s.wrapperDom=n},className:e}),o)}}]),p}(n.Component);f(w,"propTypes",{children:p.default.any,className:p.default.string,prefixCls:p.default.string,amount:p.default.number,repeat:p.default.number,ease:p.default.string,startArea:p.default.object,endArea:p.default.object,startDelayRandom:p.default.number,basicToDuration:p.default.number,randomToDuration:p.default.number,rotateRandom:p.default.number,bezierSegmentation:p.default.number,onEnd:p.default.func}),f(w,"defaultProps",{prefixCls:"snow",amount:10,repeat:0,ease:"linear",startArea:{x:0,y:-200,width:"100%",height:50},endArea:{x:-200,y:"100%",width:"120%",height:100},basicToDuration:1200,randomToDuration:800,startDelayRandom:800,rotateRandom:180,bezierSegmentation:2,onEnd:function(){}});var b=function(s){r(t,s);var a=m(t);function t(){var n;l(this,t);for(var s=arguments.length,p=new Array(s),o=0;o<s;o++)p[o]=arguments[o];return f(g(n=a.call.apply(a,[this].concat(p))),"state",{show:!0}),f(g(n),"onEnd",(function(){n.setState({show:!1})})),n}return k(t,[{key:"render",value:function(){var s=Array(5).fill(1).map((function(s,a){return n.createElement("div",{key:a,className:"addMoneyAnim",style:{animationDelay:"".concat(.6*-Math.random(),"s")}})}));return n.createElement("div",{className:"snow-demo-wrapper"},n.createElement("div",{className:"snow-demo"},this.state.show&&n.createElement(w,{onEnd:this.onEnd},s)))}}]),t}(n.Component);return n.createElement(b,null)},style:".snow-demo-wrapper {\n  background: #DFEAFF;\n  overflow: hidden;\n  height: 500px;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.snow-demo {\n  width: 300px;\n  height: 90%;\n  margin: auto;\n  position: relative;\n  background-image: url(https://gw.alipayobjects.com/zos/rmsportal/dNpuKMDHFEpMGrTxdLVR.jpg);\n  background-position: top;\n  background-size: 100% auto;\n  box-shadow: 0 0 32px rgba(0, 0, 0, 0.15);\n}\n\n.snow {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  overflow: hidden;\n}\n\n.snowChild {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.snowRotate {\n  transform-origin: center center;\n} ",highlightedStyle:'<span class="token selector"><span class="token class">.snow-demo-wrapper</span> </span><span class="token punctuation">{</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#DFEAFF</span><span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">500</span>px<span class="token punctuation">;</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.snow-demo</span> </span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">90%</span><span class="token punctuation">;</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>\n  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(https://gw.alipayobjects.com/zos/rmsportal/dNpuKMDHFEpMGrTxdLVR.jpg)</span><span class="token punctuation">;</span>\n  <span class="token property">background-position</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>\n  <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">100%</span> auto<span class="token punctuation">;</span>\n  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">32</span>px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.snow</span> </span><span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.snowChild</span> </span><span class="token punctuation">{</span>\n  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>\n  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector"><span class="token class">.snowRotate</span> </span><span class="token punctuation">{</span>\n  <span class="token property">transform-origin</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> '}},1273:function(n,s,a){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var t,p=a(3),o=(t=p)&&t.__esModule?t:{default:t},e=a(30);var c=180/Math.PI,u=[],l=[],i=[],k={},r={Segment:function(n,s,a,t){this.a=n,this.b=s,this.c=a,this.d=t,this.da=t-n,this.ca=a-n,this.ba=s-n},cubicToQuadratic:function(n,s,a,t){var p={a:n},o={},e={},c={c:t},u=(n+s)/2,l=(s+a)/2,i=(a+t)/2,k=(u+l)/2,r=(l+i)/2,d=(r-k)/8;return p.b=u+(n-u)/4,o.b=k+d,p.c=o.a=(p.b+o.b)/2,o.c=e.a=(k+r)/2,e.b=r-d,c.b=i+(t-i)/4,e.c=c.a=(e.b+c.b)/2,[p,o,e,c]},calculateControlPoints:function(n,s,a,t,p){var o=n.length-1,e=void 0,c=0,k=void 0,r=void 0,d=void 0,m=void 0,h=void 0,g=void 0,y=void 0,f=void 0,w=void 0,b=void 0,v=void 0,T=void 0,x=n[0].a;for(e=0;e<o;e++){if(k=(m=n[c]).a,r=m.d,d=n[c+1].d,p)b=u[e],T=((v=l[e])+b)*s*.25/(t?.5:i[e]||.5),y=r-((h=r-(r-k)*(t?.5*s:0!==b?T/b:0))+(((g=r+(d-r)*(t?.5*s:0!==v?T/v:0))-h)*(3*b/(b+v)+.5)/4||0));else y=r-((h=r-(r-k)*s*.5)+(g=r+(d-r)*s*.5))/2;h+=y,g+=y,m.c=f=h,m.b=0!==e?x:x=m.a+.6*(m.c-m.a),m.da=r-k,m.ca=f-k,m.ba=x-k,a?(w=this.cubicToQuadratic(k,x,f,r),n.splice(c,1,w[0],w[1],w[2],w[3]),c+=4):c++,x=g}(m=n[c]).b=x,m.c=x+.4*(m.d-x),m.da=m.d-m.a,m.ca=m.c-m.a,m.ba=x-m.a,a&&(w=this.cubicToQuadratic(m.a,x,m.c,m.d),n.splice(c,1,w[0],w[1],w[2],w[3]))},parseAnchors:function(n,s,a,t){var p,o=[],e=void 0,c=void 0,i=void 0,k=void 0,r=void 0,d=n;if(t)for(e=(d=[t].concat(d)).length;--e>-1;)"string"==typeof(r=d[e][s])&&"="===r.charAt(1)&&(d[e][s]=t[s]+Number(r.charAt(0)+r.substr(2)));if((p=d.length-2)<0)return o[0]=new this.Segment(d[0][s],0,0,d[p<-1?0:1][s]),o;for(e=0;e<p;e++)c=d[e][s],i=d[e+1][s],o[e]=new this.Segment(c,0,0,i),a&&(k=d[e+2][s],u[e]=(u[e]||0)+(i-c)*(i-c),l[e]=(l[e]||0)+(k-i)*(k-i));return o[e]=new this.Segment(d[e][s],0,0,d[e+1][s]),o},bezierThrough:function(n,s,a,t,p,o){var e=n,c=s,r=p,d=o,m={},h=[],g=d||e[0],y=void 0,f=void 0,w=void 0,b=void 0,v=void 0,T=void 0,x=void 0,A=void 0;if(r="string"==typeof r?","+r+",":",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",null===c&&(c=1),Object.keys(e[0]).forEach((function(n){h.push(n)})),e.length>1){for(A=e[e.length-1],x=!0,y=h.length;--y>-1;)if(f=h[y],Math.abs(g[f]-A[f])>.05){x=!1;break}x&&(e=e.concat(),d&&e.unshift(d),e.push(e[1]),d=e[e.length-3])}for(u.length=l.length=i.length=0,y=h.length;--y>-1;)f=h[y],k[f]=-1!==r.indexOf(","+f+","),m[f]=this.parseAnchors(e,f,k[f],d);for(y=u.length;--y>-1;)u[y]=Math.sqrt(u[y]),l[y]=Math.sqrt(l[y]);if(!t){for(y=h.length;--y>-1;)if(k[f])for(T=(w=m[h[y]]).length-1,b=0;b<T;b++)v=w[b+1].da/l[b]+w[b].da/u[b],i[b]=(i[b]||0)+v*v;for(y=i.length;--y>-1;)i[y]=Math.sqrt(i[y])}for(y=h.length,b=a?4:1;--y>-1;)w=m[f=h[y]],this.calculateControlPoints(w,c,a,t,k[f]),x&&(w.splice(0,b),w.splice(w.length-b,b));return m},parseBezierData:function(n){var s=n.vars.concat(),a=n.type,t=n.startPoint,p={},o="cubic"===a?3:2,e="soft"===a,c=void 0,u=void 0,l=void 0,i=void 0,k=void 0,r=void 0,d=void 0,m=void 0,h=void 0;if(e&&s.splice(0,0,t),null===s||s.length<o+1)return console.error("invalid Bezier data");for(var g=1;g>=0;g--){p[d=g?"x":"y"]=k=[],m=0;for(var y=0;y<s.length;y++){var f="string"==typeof(h=s[y][d])&&"="===h.charAt(1)?t[d]+Number(h.charAt(0)+h.substr(2)):Number(h);c=null===t?s[y][d]:f,e&&y>1&&y<s.length-1&&(k[m++]=(c+k[m-2])/2),k[m++]=c}r=m-o+1,m=0;for(var w=0;w<r;w+=o)c=k[w],u=k[w+1],l=k[w+2],i=2===o?0:k[w+3],k[m++]=h=3===o?new this.Segment(c,u,l,i):new this.Segment(c,(2*u+c)/3,(2*u+l)/3,l);k.length=m}return p},addCubicLengths:function(n,s,a){for(var t=1/a,p=n.length,o=void 0,e=void 0,c=void 0,u=void 0,l=void 0,i=void 0,k=void 0,r=void 0,d=void 0,m=void 0,h=void 0;--p>-1;)for(c=(m=n[p]).a,u=m.d-c,l=m.c-c,i=m.b-c,o=e=0,r=1;r<=a;r++)o=e-(e=((k=t*r)*k*u+3*(d=1-k)*(k*l+d*i))*k),s[h=p*a+r-1]=(s[h]||0)+o*o},parseLengthData:function(n,s){var a=this,t=s||6,p=[],o=[],e=t-1,c=[],u=0,l=0,i=[];return Object.keys(n).forEach((function(s){a.addCubicLengths(n[s],p,t)})),p.forEach((function(n,s){u+=Math.sqrt(n);var a=s%t;i[a]=u,a===e&&(l+=u,c[a=s/t>>0]=i,o[a]=l,u=0,i=[])})),{length:l,lengths:o,segments:c}}},d=function(n,s){this.vars=this.getDefaultData(s),this.target=n,this.transform=(0,e.checkStyleName)("transform")};d.prototype={name:"bezier",useStyle:"transform",getDefaultData:function(n){return{type:n.type||"soft",autoRotate:n.autoRotate||!1,vars:n.vars||{},startPoint:null}},init:function(){var n=this.vars,s=n.autoRotate;this._timeRes=n.timeResolution?parseInt(n.timeResolution,10):6;var a=!0===s?0:Number(s),t=s instanceof Array?s:[["x","y","rotation",a||0]];if(this._autoRotate=s?t:null,this._beziers="cubic"!==n.type&&"quadratic"!==n.type&&"soft"!==n.type?r.bezierThrough(n.vars,isNaN(n.curviness)?1:n.curviness,!1,"thruBasic"===n.type,n.correlate,n.startPoint):r.parseBezierData(n),this._segCount=this._beziers.x.length,this._timeRes){var p=r.parseLengthData(this._beziers,this._timeRes);this._length=p.length,this._lengths=p.lengths,this._segments=p.segments,this._l1=this._li=this._s1=this._si=0,this._l2=this._lengths[0],this._curSeg=this._segments[0],this._s2=this._curSeg[0],this._prec=1/this._curSeg.length}},set:function(n){var s,a=this._segCount,t={},p=void 0,o=void 0,e=void 0,u=void 0,l=void 0,i=void 0,k=void 0,r=void 0,d=void 0,m=void 0,h=void 0;if(this._timeRes){if(r=this._lengths,d=this._curSeg,m=n*this._length,o=this._li,m>this._l2&&o<a-1){for(k=a-1;o<k&&(this._l2=r[++o])<=m;);this._l1=r[o-1],this._li=o,this._curSeg=d=this._segments[o],this._s2=d[this._s1=this._si=0]}else if(m<this._l1&&o>0){for(;o>0&&(this._l1=r[--o])>=m;);0===o&&m<this._l1?this._l1=0:o++,this._l2=r[o],this._li=o,this._curSeg=d=this._segments[o],this._s1=d[(this._si=d.length-1)-1]||0,this._s2=d[this._si]}if(p=o,m-=this._l1,o=this._si,m>this._s2&&o<d.length-1){for(k=d.length-1;o<k&&(this._s2=d[++o])<=m;);this._s1=d[o-1],this._si=o}else if(m<this._s1&&o>0){for(;o>0&&(this._s1=d[--o])>=m;);0===o&&m<this._s1?this._s1=0:o++,this._s2=d[o],this._si=o}l=(o+(m-this._s1)/(this._s2-this._s1))*this._prec||0}else{l=(n-(p=n<0?0:n>=1?a-1:a*n>>0)*(1/a))*a}for(s=1-l,o=1;o>=0;o--)e=o?"x":"y",i=(l*l*(u=this._beziers[e][p]).da+3*s*(l*u.ca+s*u.ba))*l+u.a,t[e]=i;if(this._autoRotate){var g=this._autoRotate,y=void 0,f=void 0,w=void 0,b=void 0,v=void 0,T=void 0,x=void 0;for(o=g.length;--o>-1;){if(e=g[o][2],T=g[o][3]||0,x=!0===g[o][4]?1:c,u=this._beziers[g[o][0]],y=this._beziers[g[o][1]],u&&y)u=u[p],y=y[p],f=u.a+(u.b-u.a)*l,f+=((b=u.b+(u.c-u.b)*l)-f)*l,b+=(u.c+(u.d-u.c)*l-b)*l,w=y.a+(y.b-y.a)*l,w+=((v=y.b+(y.c-y.b)*l)-w)*l,v+=(y.c+(y.d-y.c)*l-v)*l,h=Math.atan2(v-w,b-f)*x+T}}return h?"translate("+t.x+"px,"+t.y+"px) rotate("+h+"deg)":"translate("+t.x+"px,"+t.y+"px)"},getAnimStart:function(n,s){var a=n[s?"transformSVG":this.transform];a="none"===a?"":a;var t=(0,e.createMatrix)(a);this.vars.startPoint={x:t.e,y:t.f},this.init()},setRatio:function(n,s,a){var t=(0,e.getTransform)(this.set(n));s.style.transform=(0,o.default)({},s.style.transform,{translateX:t.translateX,translateY:t.translateY,rotate:t.rotate}),a&&(a.transformSVG=(0,e.createMatrix)(s.style.transform).toString())}},d.bezierThrough=r.bezierThrough,d.cubicToQuadratic=r.cubicToQuadratic,d.quadraticToCubic=function(n,s,a){return new r.Segment(n,(2*s+n)/3,(2*s+a)/3,a)},s.default=d,n.exports=s.default},1274:function(n,s,a){}}]);